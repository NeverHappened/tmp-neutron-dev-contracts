{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DexMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "deposit"
      ],
      "properties": {
        "deposit": {
          "type": "object",
          "required": [
            "amounts_a",
            "amounts_b",
            "fees",
            "options",
            "receiver",
            "tick_indexes_a_to_b",
            "token_a",
            "token_b"
          ],
          "properties": {
            "amounts_a": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Uint128"
              }
            },
            "amounts_b": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Uint128"
              }
            },
            "fees": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "options": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/DepositOption"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "receiver": {
              "type": "string"
            },
            "tick_indexes_a_to_b": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "token_a": {
              "type": "string"
            },
            "token_b": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdrawal"
      ],
      "properties": {
        "withdrawal": {
          "type": "object",
          "required": [
            "fees",
            "receiver",
            "shares_to_remove",
            "tick_indexes_a_to_b",
            "token_a",
            "token_b"
          ],
          "properties": {
            "fees": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "receiver": {
              "type": "string"
            },
            "shares_to_remove": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Uint128"
              }
            },
            "tick_indexes_a_to_b": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            },
            "token_a": {
              "type": "string"
            },
            "token_b": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "place_limit_order"
      ],
      "properties": {
        "place_limit_order": {
          "type": "object",
          "required": [
            "amount_in",
            "order_type",
            "receiver",
            "tick_index_in_to_out",
            "token_in",
            "tonek_out"
          ],
          "properties": {
            "amount_in": {
              "$ref": "#/definitions/Uint128"
            },
            "expiration_time": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "max_amount_out": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            },
            "order_type": {
              "$ref": "#/definitions/LimitOrderType"
            },
            "receiver": {
              "type": "string"
            },
            "tick_index_in_to_out": {
              "type": "integer",
              "format": "int64"
            },
            "token_in": {
              "type": "string"
            },
            "tonek_out": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw_filled_limit_order"
      ],
      "properties": {
        "withdraw_filled_limit_order": {
          "type": "object",
          "required": [
            "tranche_key"
          ],
          "properties": {
            "tranche_key": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "cancel_limit_order"
      ],
      "properties": {
        "cancel_limit_order": {
          "type": "object",
          "required": [
            "tranche_key"
          ],
          "properties": {
            "tranche_key": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "multi_hop_swap"
      ],
      "properties": {
        "multi_hop_swap": {
          "type": "object",
          "required": [
            "amount_in",
            "exit_limit_price",
            "pick_best_route",
            "receiver",
            "routes"
          ],
          "properties": {
            "amount_in": {
              "$ref": "#/definitions/Uint128"
            },
            "exit_limit_price": {
              "$ref": "#/definitions/PrecDec"
            },
            "pick_best_route": {
              "type": "boolean"
            },
            "receiver": {
              "type": "string"
            },
            "routes": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/MultiHopRoute"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "DepositOption": {
      "type": "object",
      "required": [
        "disable_swap"
      ],
      "properties": {
        "disable_swap": {
          "type": "boolean"
        }
      }
    },
    "LimitOrderType": {
      "type": "string",
      "enum": [
        "GoodTillCancel",
        "FillOrKill",
        "ImmediateOrCancel",
        "JustInTime",
        "GoodTilTime"
      ]
    },
    "MultiHopRoute": {
      "type": "object",
      "required": [
        "hops"
      ],
      "properties": {
        "hops": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrecDec": {
      "type": "object",
      "required": [
        "i"
      ],
      "properties": {
        "i": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
